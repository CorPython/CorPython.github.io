<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on code show的博客</title>
    <link>https://CorPython.github.io/post/</link>
    <description>Recent content in Posts on code show的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Nov 2019 20:25:21 +0800</lastBuildDate>
    
	<atom:link href="https://CorPython.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vscode如何写latex</title>
      <link>https://CorPython.github.io/post/vscode%E7%BC%96%E5%86%99latex/</link>
      <pubDate>Fri, 22 Nov 2019 20:25:21 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/vscode%E7%BC%96%E5%86%99latex/</guid>
      <description>后续会补上</description>
    </item>
    
    <item>
      <title>Windows安装latex</title>
      <link>https://CorPython.github.io/post/windows%E5%AE%89%E8%A3%85latex/</link>
      <pubDate>Fri, 22 Nov 2019 20:21:37 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/windows%E5%AE%89%E8%A3%85latex/</guid>
      <description>后期会补上</description>
    </item>
    
    <item>
      <title>WireShark找不到接口或者网卡</title>
      <link>https://CorPython.github.io/post/WireShark%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8E%A5%E5%8F%A3%E6%88%96%E8%80%85%E7%BD%91%E5%8D%A1/</link>
      <pubDate>Tue, 19 Nov 2019 22:19:14 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/WireShark%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8E%A5%E5%8F%A3%E6%88%96%E8%80%85%E7%BD%91%E5%8D%A1/</guid>
      <description>wireshark是一款win10上的抓包软件.详情请点击官网 安装过程就不再赘述,请自己百度 百度的解释为: Wireshark（前称Ethereal）是一个网络封包分析软件。网络封包分析软件的功能是撷取网络封包，并尽可能显示出最为详细的网络封包资料。Wireshark使用WinPC</description>
    </item>
    
    <item>
      <title>hugo添加博客字数统计功能</title>
      <link>https://CorPython.github.io/post/hugo%E6%B7%BB%E5%8A%A0%E5%8D%9A%E5%AE%A2%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Fri, 15 Nov 2019 13:31:15 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/hugo%E6%B7%BB%E5%8A%A0%E5%8D%9A%E5%AE%A2%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD/</guid>
      <description>1.在自己的博客的文章中找到你想将字数多少显示的具体位置,假如我想将它放在阅读数的后面,先定位到阅读数的源代码位置,找到对应的class位置. 2.在自己主题的single.html的配置中搜索第一步中的class的位置,并在{{ end }}后面添加一下代码,比如我的主题对应的singl</description>
    </item>
    
    <item>
      <title>hugo如何将文章置顶</title>
      <link>https://CorPython.github.io/post/hugo%E5%A6%82%E4%BD%95%E5%B0%86%E6%96%87%E7%AB%A0%E7%BD%AE%E9%A1%B6/</link>
      <pubDate>Fri, 15 Nov 2019 13:04:44 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/hugo%E5%A6%82%E4%BD%95%E5%B0%86%E6%96%87%E7%AB%A0%E7%BD%AE%E9%A1%B6/</guid>
      <description>在创建的博客或者写过的博客的Front matter中添加下列字段 weight:1</description>
    </item>
    
    <item>
      <title>git clone出错</title>
      <link>https://CorPython.github.io/post/gitcloneerror/</link>
      <pubDate>Thu, 14 Nov 2019 20:39:01 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/gitcloneerror/</guid>
      <description>问题如下图: 输入命令,修改https方式下载改为使用ssh下载方式 git config --global url.git：//github.com/.insteadOf https://github.com/</description>
    </item>
    
    <item>
      <title>Vim代码自动补全</title>
      <link>https://CorPython.github.io/post/vim%E4%BB%A3%E7%A0%81%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8/</link>
      <pubDate>Thu, 14 Nov 2019 12:36:58 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/vim%E4%BB%A3%E7%A0%81%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8/</guid>
      <description>vim自带的代码补全快捷键 ctrl + N</description>
    </item>
    
    <item>
      <title>Github同步fork的项目</title>
      <link>https://CorPython.github.io/post/github%E5%90%8C%E6%AD%A5fork%E7%9A%84%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Wed, 13 Nov 2019 18:30:44 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/github%E5%90%8C%E6%AD%A5fork%E7%9A%84%E9%A1%B9%E7%9B%AE/</guid>
      <description>给出两种方法 1.使用git指令进行更新 git remote -v git remote add upstream git@github.com:xxx/xxx.git git fetch upstream git merge upstream/master 2.在Github Desktop上更新</description>
    </item>
    
    <item>
      <title>Vim如何安装插件</title>
      <link>https://CorPython.github.io/post/vim%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Wed, 13 Nov 2019 16:54:24 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/vim%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6/</guid>
      <description>vim 安装插件 vim在linux下的配置文件的地址有以下两z种方法 vim /home/用户名/.vimrc(比如vim /home/zhangfp/.vimrc) 或者 vim ~/.vimrc linux下安装插件管理器vim_plug curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim 将以下信息写入.vimrc中 &amp;quot; Specify a directory for plugins &amp;quot; - For Neovim: stdpath(&#39;data&#39;) . &#39;/plugged&#39; &amp;quot; - Avoid using standard Vim directory names like &#39;plugin&#39; call plug#begin(&#39;~/.vim/plugged&#39;) &amp;quot; Make sure you use single quotes &amp;quot; Shorthand notation; fetches https://github.com/junegunn/vim-easy-align Plug &#39;junegunn/vim-easy-align&#39; &amp;quot;</description>
    </item>
    
    <item>
      <title>Pacman包管理命令</title>
      <link>https://CorPython.github.io/post/pacman%E5%8C%85%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Wed, 13 Nov 2019 16:51:48 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/pacman%E5%8C%85%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4/</guid>
      <description>Pacman指令 1.安装软件 sudo pacman -S 软件名 2.更新软件源并更新你的软件 sudo pacman -Syu 3.查询软件 sudo pacman -Ss 软件名 4.请理已安装的软件的缓存(安装包) sudo pacman -Sc 5.删除某个软件 只删除安装包 sudo pacman -R 软件名 删除安装包及其依赖 sudo pacman -Rs 软件名 在上面的基础上删除该软件的全局配置(推荐) sudo pacman -Rns 软件名 6.查询本地已经</description>
    </item>
    
    <item>
      <title>hugo限制摘要字数显示</title>
      <link>https://CorPython.github.io/post/hugo%E9%99%90%E5%88%B6%E6%91%98%E8%A6%81%E5%AD%97%E6%95%B0%E6%98%BE%E7%A4%BA/</link>
      <pubDate>Wed, 13 Nov 2019 16:09:51 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/hugo%E9%99%90%E5%88%B6%E6%91%98%E8%A6%81%E5%AD%97%E6%95%B0%E6%98%BE%E7%A4%BA/</guid>
      <description>在首页显示博客时,我们通常不希望将所有的内容显示出来,只希望显示部分内容.我们通常会在config.toml中设定摘要的字数 summaryLength = 180 但是,只在配置文件中这样设置是没有效果的!!!!我们需要在每一篇博客的开头加上这样一句 isCJKLanguage: true 为了避免每次写博客时手动添加,我们可以将这一句写入模板中,打</description>
    </item>
    
    <item>
      <title>Matlab学习笔记</title>
      <link>https://CorPython.github.io/post/matlab%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Wed, 13 Nov 2019 16:05:31 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/matlab%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
      <description>绘图 添加标签，标题，生成网格线，美化图形 x = [0:0.01:10]; y = sin(x); plot(x, y), xlabel(&#39;x&#39;), ylabel(&#39;Sin(x)&#39;), title(&#39;Sin(x) Graph&#39;), grid on,axis equal#添加网格线和美化图形 绘制多个函数 x = [0 : 0.01: 10]; y = sin(x); g = cos(x); plot(x, y, x, g, &#39;.-&#39;), legend(&#39;Sin(x)&#39;, &#39;Cos(x)&#39;) 绘制多个图象 plot(x,y,x,g) #等价于 plot(x,y) hold all#保留上次绘图并添加新的绘图 plot(x,g) 设置坐标轴的刻度范围 axis([xmin xmax ymin ymax]) axis([xmin xmax ymin ymax zmin zmax cmin cmax]); % 设置x，y，z轴的范围</description>
    </item>
    
    <item>
      <title>解决vscode终端中文乱码</title>
      <link>https://CorPython.github.io/post/vscode%E7%BB%88%E7%AB%AF%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</link>
      <pubDate>Mon, 11 Nov 2019 20:40:54 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/vscode%E7%BB%88%E7%AB%AF%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</guid>
      <description>解决vscode终端中文乱码 1.查看cmd窗口编码，GBK的编码为936，cmd的默认编码为GBK,而很多编译器的默认编码为UTF-8，所以中文会出现乱码，比如vscode下默认编码为UTF-8 使用chcp查看cmd的编码，如果不是UTF-8，可以使用chcp 65001这个命令 2</description>
    </item>
    
    <item>
      <title>hugo博客如何使用gittalk</title>
      <link>https://CorPython.github.io/post/hugo%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8gittalk%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Mon, 11 Nov 2019 18:59:30 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/hugo%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8gittalk%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</guid>
      <description>1.进入github官方网站,登陆自己的github-&amp;gt;settings-&amp;gt;Devloper settings-&amp;gt;Github Apps会出现下图 Application name:给应用起个名字,根据自己的想法 Homepage:写你的博客地址 Application description:为你的应用写一段描述 Application callback URL:回调地址,可以写你的博客</description>
    </item>
    
    <item>
      <title>git push -u origin master出错解决方案</title>
      <link>https://CorPython.github.io/post/%E4%BF%AE%E5%A4%8Dgitpush%E5%88%B0github%E5%87%BA%E9%94%99%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 11 Nov 2019 18:46:33 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/%E4%BF%AE%E5%A4%8Dgitpush%E5%88%B0github%E5%87%BA%E9%94%99%E9%97%AE%E9%A2%98/</guid>
      <description>当执行了git push -u origin master时,有时候会出现下图中的错误,主要时本地的代码和远程代码仓库的代码出现了冲突,需要同步远程的master 分支 要解决上述的冲突很简单,只需要下面两条指令即可完成 git pull origin master git push -u origin master</description>
    </item>
    
    <item>
      <title>Gittalk报错Error: Validation Failed</title>
      <link>https://CorPython.github.io/post/gittalk%E5%87%BA%E9%94%99%E8%A7%A3%E5%86%B3/</link>
      <pubDate>Mon, 11 Nov 2019 18:14:21 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/gittalk%E5%87%BA%E9%94%99%E8%A7%A3%E5%86%B3/</guid>
      <description>gittalk 是一个基于 Github Issue 和 Preact 开发的评论插件。它除了支持 Hexo外，还支持 java，php 等语言开发的博客,当然我现在使用的hugo博客也是支持的.详情请点击gittalk官网 但是如果标题的字节过长(建议标题起短一些),会出现ERROR:Validation Failed这个错误 解决方案 1.</description>
    </item>
    
    <item>
      <title>windows连接mongodb数据库</title>
      <link>https://CorPython.github.io/post/windows%E8%BF%9E%E6%8E%A5mongodb%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Sun, 10 Nov 2019 20:30:14 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/windows%E8%BF%9E%E6%8E%A5mongodb%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>1.打开git-bash或者其他命令行工具,输入下列命令 mongod --dbpath /d/MongoDB/Server/4.0/data/db //dbpath后面是mongodb数据库的绝对路径 2.打开mongodb compass数据库管理软件,连接数据库 3.连接成功</description>
    </item>
    
    <item>
      <title>Windows大量软件安装后乱码解决</title>
      <link>https://CorPython.github.io/post/windows%E5%A4%A7%E9%87%8F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%90%8E%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3/</link>
      <pubDate>Fri, 08 Nov 2019 20:46:48 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/windows%E5%A4%A7%E9%87%8F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%90%8E%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3/</guid>
      <description>写在前面 你是不是经常遇到windows软件安装后输入窗口输入中文全是乱码或者中文根本不能输入,本人也曾经遇到过这种问题,曾经使用的Dev C++5.11就出现过这种情况,虽然环境改成了中文却全是乱码,搜遍全网,也没有找到结果,就在不久前,我终于知道了问题的解决办法,请根据下列步骤进</description>
    </item>
    
    <item>
      <title>vscode配置文档</title>
      <link>https://CorPython.github.io/post/vscode%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Thu, 07 Nov 2019 20:32:46 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/vscode%E9%85%8D%E7%BD%AE/</guid>
      <description>vscode作为一个优秀的编辑器,以轻度,高效,美观著名.但是配置c语言确实对新手很不友好.所以我这里保存了最新版的vscode的c/c++配置文件 使用者只要直接在.vscode 文件夹下建立launch.json和tasks.json配置文件即可 注意:在所有的mingw64的位置</description>
    </item>
    
    <item>
      <title>hugo发布博客流程</title>
      <link>https://CorPython.github.io/post/hugo%E6%8F%90%E4%BA%A4%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 07 Nov 2019 19:54:17 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/hugo%E6%8F%90%E4%BA%A4%E5%8D%9A%E5%AE%A2/</guid>
      <description>在博客根目录下运行下面命令,并在post目录下生成markdown博客文件 hugo new post/xxxx.md 在博客根目录下运行下面命令 hugo //将本地文件重新编译 hugo server//在本地生成 注意,可以在本地查看博客变化,等自己觉得合适了就可以使用下面命令提交到github 在hugo本地的public目录下使用如</description>
    </item>
    
    <item>
      <title>github基本操作</title>
      <link>https://CorPython.github.io/post/github%E7%9B%B8%E5%85%B3/</link>
      <pubDate>Thu, 07 Nov 2019 19:23:28 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/github%E7%9B%B8%E5%85%B3/</guid>
      <description>1.创建一个新仓库repo mkdir repo//创建一个新文件夹 cd repo//进入这个文件夹 git init//初始化这个仓库 ll .git/.git文件中的相关信息 .git文件中的信息有以下 config 文件包含了项目特有的配置选项 description仓库的描述 HEAD 文件指向当前分支 hooks 目录保存了客户端或服务端</description>
    </item>
    
    <item>
      <title>linux编译c/c&#43;&#43;命令</title>
      <link>https://CorPython.github.io/post/linux%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Thu, 07 Nov 2019 19:23:28 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/linux%E5%91%BD%E4%BB%A4/</guid>
      <description>linux下g++编译运行c++ g++ -std=c++11 -o test test.cpp(在c++11标准下编译) ./test linux下gcc编译c语言 gcc -o test test.c ./test linux基本命令 cd 或者cd ~ 返回用户工作目录 ls cd - 返回上一个访问的目录 mkdir 文件夹名 创建文件夹 cd ..// 返回上一级目录 cd ../.. 返回上两级目录,以此类推 pwd 打印当前路径 export //</description>
    </item>
    
    <item>
      <title>vim基础操作</title>
      <link>https://CorPython.github.io/post/vim%E6%93%8D%E4%BD%9C%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 07 Nov 2019 19:23:28 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/vim%E6%93%8D%E4%BD%9C%E7%AC%94%E8%AE%B0/</guid>
      <description>vim指令 基础命令 h上 j下 k 上 l右 b:回退 p:粘贴 y:复制 u:撤消 d:剪切 i:进入insert模式 a:在当前光标后进入insert模式 o:在当前光标的下一行进入insert模式 c:剪切并进入insert模式 v：直接进入可视化visual模式 V：选择光标所在行并进入visual模式</description>
    </item>
    
    <item>
      <title>Vscode快捷键</title>
      <link>https://CorPython.github.io/post/vscode%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Thu, 07 Nov 2019 19:23:28 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/vscode%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>vscode vs code 的常用快捷键 1、注释： a) 单行注释：[ctrl+k,ctrl+c] 或 ctrl+/ b) 取消单行注释：ctrl+k,ctrl+u c) 多行注释：[alt+shift+A] d) 多行注释：/** 2、移动行：alt+up/down，选中按TAB右移，按SHIFT+TAB左移 3、显示/隐藏左侧目录栏 ctrl + b</description>
    </item>
    
  </channel>
</rss>