<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>踩坑篇 on code show的博客</title>
    <link>https://CorPython.github.io/categories/%E8%B8%A9%E5%9D%91%E7%AF%87/</link>
    <description>Recent content in 踩坑篇 on code show的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Feb 2020 18:54:19 +0800</lastBuildDate>
    
	<atom:link href="https://CorPython.github.io/categories/%E8%B8%A9%E5%9D%91%E7%AF%87/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C&#43;&#43;中关于数组的动态初始化问题</title>
      <link>https://CorPython.github.io/post/c&#43;&#43;%E4%B8%AD%E5%85%B3%E4%BA%8E%E6%95%B0%E7%BB%84%E7%9A%84%E5%8A%A8%E6%80%81%E5%88%9D%E5%A7%8B%E5%8C%96%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 19 Feb 2020 18:54:19 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/c&#43;&#43;%E4%B8%AD%E5%85%B3%E4%BA%8E%E6%95%B0%E7%BB%84%E7%9A%84%E5%8A%A8%E6%80%81%E5%88%9D%E5%A7%8B%E5%8C%96%E9%97%AE%E9%A2%98/</guid>
      <description>这是一段c++代码; #include &amp;lt;iostream&amp;gt; using namespace std; int main() { int len = 5; int arr[len] { 0 }; for (size_t i = 0; i &amp;lt; len; i++) { cout &amp;lt;&amp;lt; arr[i] &amp;lt;&amp;lt; endl; } return 0; } 我们先看在g++中的运行情况: 我们将arr数组初始化为0.并输出,得到了正确的结果 然后我们在vs2019中运行,vs2019使用的是msvc编译器 直接运行出了错,因为动态数组长度必须是常量</description>
    </item>
    
    <item>
      <title>vscode修改默认的快捷键</title>
      <link>https://CorPython.github.io/post/vscode%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Sun, 16 Feb 2020 21:43:25 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/vscode%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>这篇文章的由来是因为我在vscode上写cpp代码时发现注释的快捷键和我在其他编辑器上不同😵.于是我通过百度查找,终于在这篇问答中找到了答案😃,vscode使用的快捷键是shift + alt + a😭,大微软的使用习惯谁能琢磨透呢🤣 通常我们在写代码的时候会使用到两种注释方式 1.行注释 默认快</description>
    </item>
    
    <item>
      <title>Linux下解压安装压缩包</title>
      <link>https://CorPython.github.io/post/linux%E4%B8%8B%E8%A7%A3%E5%8E%8B%E5%AE%89%E8%A3%85%E5%8E%8B%E7%BC%A9%E5%8C%85/</link>
      <pubDate>Sun, 09 Feb 2020 19:33:41 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/linux%E4%B8%8B%E8%A7%A3%E5%8E%8B%E5%AE%89%E8%A3%85%E5%8E%8B%E7%BC%A9%E5%8C%85/</guid>
      <description>linux 下安装.tar.gz文件的安装方法 1.找到你下载的压缩包,解压 tar xvf xxxx.tar.gz 2.解压之后会在当前目录出现一个和压缩包名同名的文件夹,进入这个文件夹 ls //查看目录当前的文件 3.不同文件对应的编译方式 你观察一下这个目录中包含了以下哪一个文件：configure、Makefile还是Imak</description>
    </item>
    
    <item>
      <title>Centos系统yum下载错误</title>
      <link>https://CorPython.github.io/post/centos%E7%B3%BB%E7%BB%9Fyum%E4%B8%8B%E8%BD%BD%E9%94%99%E8%AF%AF/</link>
      <pubDate>Sat, 08 Feb 2020 23:49:16 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/centos%E7%B3%BB%E7%BB%9Fyum%E4%B8%8B%E8%BD%BD%E9%94%99%E8%AF%AF/</guid>
      <description>错误描述 File contains no section headers. file: file:///etc/yum.repos.d/mcepl-vim8-epel-7.repo, line: 2 原因 原因是没有配置yum源 解决 删除之前的yum源文件,自己获取阿里的源,命令 //删除该目录下所有文件 rm -f /etc/yum.repos.d/* //获取阿里源 wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo //清理缓存 yum clean all //下载测试安装 yum install vim</description>
    </item>
    
    <item>
      <title>C&#43;&#43;编译错误2</title>
      <link>https://CorPython.github.io/post/c&#43;&#43;%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF2/</link>
      <pubDate>Sat, 01 Feb 2020 16:22:33 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/c&#43;&#43;%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF2/</guid>
      <description>&amp;lsquo;shared_ptr&amp;rsquo; was not declared in this scope 在我编译下面这段代码时,对于智能指针shared_ptr编译出错 #include &amp;lt;string&amp;gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;memory&amp;gt; //shared_ptr class Base1 { }; class Derived1: public Base1 { }; class Base2 { }; class Derived2: public Base2 { }; template &amp;lt;class T1, class T2&amp;gt; struct pair { typedef T1 first_type; typedef T2 second_type; T1 first; T2 second; pair() : first(T1()), second(T2()) {} pair(const T1&amp;amp; a, const T2&amp;amp; b) : first(a), second(b) {} template &amp;lt;class U1, class U2&amp;gt; pair(const pair&amp;lt;U1, U2&amp;gt;&amp;amp; p) : first(p.first), second(p.second) {} }; int main(int argc, char const *argv[]) { pair&amp;lt;Derived1, Derived2&amp;gt; p; pair&amp;lt;Base1, Base2&amp;gt; p2(pair&amp;lt;Derived1, Derived2&amp;gt;()); pair&amp;lt;Base1, Base2&amp;gt; p3(p); // pair&amp;lt;Derived1, Derived2&amp;gt; p4(p3); // error: no matching function for call to</description>
    </item>
    
    <item>
      <title>C&#43;&#43;编译错误之与标准库函数冲突</title>
      <link>https://CorPython.github.io/post/c&#43;&#43;%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%E4%B9%8B%E4%B8%8E%E6%A0%87%E5%87%86%E5%BA%93%E5%87%BD%E6%95%B0%E5%86%B2%E7%AA%81/</link>
      <pubDate>Sat, 01 Feb 2020 15:10:38 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/c&#43;&#43;%E7%BC%96%E8%AF%91%E9%94%99%E8%AF%AF%E4%B9%8B%E4%B8%8E%E6%A0%87%E5%87%86%E5%BA%93%E5%87%BD%E6%95%B0%E5%86%B2%E7%AA%81/</guid>
      <description>error: call of overloaded &amp;lsquo;swap(int&amp;amp;, int&amp;amp;)&amp;rsquo; is ambiguous swap(a,b); 最近使用模板template写了一个swap函数,编译之后竟然出错了 代码如下: #include &amp;lt;iostream&amp;gt; using namespace std; template&amp;lt;class T&amp;gt; void swap(T&amp;amp; a, T&amp;amp; b) { T temp = b; b = a; a = temp; } int main(int argc, char const *argv[]) { int a = 15,b = 20; swap(a,b); cout &amp;lt;&amp;lt; a &amp;lt;&amp;lt; endl; cout &amp;lt;&amp;lt; b &amp;lt;&amp;lt; endl; float m = 15,n = 22; swap(m,n); cout &amp;lt;&amp;lt; m &amp;lt;&amp;lt; endl; cout &amp;lt;&amp;lt; n &amp;lt;&amp;lt; endl; return 0; } 报错信息 原因是因为标准库中已经定义过这个函数,只</description>
    </item>
    
    <item>
      <title>vs2019代码智能提醒默认选中</title>
      <link>https://CorPython.github.io/post/vs2019%E4%BB%A3%E7%A0%81%E6%99%BA%E8%83%BD%E6%8F%90%E9%86%92%E9%BB%98%E8%AE%A4%E9%80%89%E4%B8%AD/</link>
      <pubDate>Sun, 26 Jan 2020 23:23:17 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/vs2019%E4%BB%A3%E7%A0%81%E6%99%BA%E8%83%BD%E6%8F%90%E9%86%92%E9%BB%98%E8%AE%A4%E9%80%89%E4%B8%AD/</guid>
      <description>用过idea或者pycharm之类编译器的应该知道我这篇文章的意思,就是你在用vs2019写代码时的弹出来的智能提示没有自动帮你选中,而是弹出提示框让你自己按上下键先选中,这样不符合我的习惯,也降低了我的效率.我觉得作为windows端最强c++IDE不可能连这都没有吧,最后还是</description>
    </item>
    
    <item>
      <title>记第一次备案踩过的那些坑</title>
      <link>https://CorPython.github.io/post/%E8%AE%B0%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%A4%87%E6%A1%88%E8%B8%A9%E8%BF%87%E7%9A%84%E9%82%A3%E4%BA%9B%E5%9D%91/</link>
      <pubDate>Mon, 20 Jan 2020 20:00:35 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/%E8%AE%B0%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%A4%87%E6%A1%88%E8%B8%A9%E8%BF%87%E7%9A%84%E9%82%A3%E4%BA%9B%E5%9D%91/</guid>
      <description>备案的由来 关于备案的解释:以下来自百度百科 网站备案是指向主管机关报告事由存案以备查考。行政法角度看备案，实践中主要是《立法法》和《法规规章备案条例》的规定。网站备案的目的就是为了防止在网上从事非法的网站经营活动，打击不良互联网信息的传播，如果网站不备案的话，很有可能被查处以后关停</description>
    </item>
    
    <item>
      <title>IDEA2019中文字体渲染问题</title>
      <link>https://CorPython.github.io/post/IDEA2019%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93%E6%B8%B2%E6%9F%93%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 11 Jan 2020 18:10:24 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/IDEA2019%E4%B8%AD%E6%96%87%E5%AD%97%E4%BD%93%E6%B8%B2%E6%9F%93%E9%97%AE%E9%A2%98/</guid>
      <description>IDEA 2018.2升级到 IDEA 2019.3,中文字体渲染问题 原文链接 解决方案 修改一下备用字体就可以 共需要修改两处： 1、Setting -&amp;gt; Editor -&amp;gt; Font 修改 Fallback font 为 simsun 2、Setting -&amp;gt; Editor -&amp;gt; Color Scheme -&amp;gt; Color Scheme Font 修改 Fallback font 为 simsun</description>
    </item>
    
    <item>
      <title>fatal: remote error: You can&#39;t push to git 解决办法</title>
      <link>https://CorPython.github.io/post/gitpush%E5%87%BA%E9%94%99/</link>
      <pubDate>Sun, 29 Dec 2019 17:27:01 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/gitpush%E5%87%BA%E9%94%99/</guid>
      <description>错误描述 fatal: remote error: You can&amp;#39;t push to git://github.com:CorPython/java_repo.git Use git@github.com:CorPython/java_repo.git 原因:如果在git clone的时候用的是git://github.com:xx/xxx.git的形式,那么就会出现这个问题 解决方案 输入下面的指令 git remote rm origin git remote add origin git@github.com:CorPython/java_repo.git git push origin 会出现下面的提示 输入上述的命令即可 git push --set-upstream origin master 成功上传!</description>
    </item>
    
    <item>
      <title>WireShark找不到接口或者网卡</title>
      <link>https://CorPython.github.io/post/WireShark%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8E%A5%E5%8F%A3%E6%88%96%E8%80%85%E7%BD%91%E5%8D%A1/</link>
      <pubDate>Tue, 19 Nov 2019 22:19:14 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/WireShark%E6%89%BE%E4%B8%8D%E5%88%B0%E6%8E%A5%E5%8F%A3%E6%88%96%E8%80%85%E7%BD%91%E5%8D%A1/</guid>
      <description>wireshark是一款win10上的抓包软件.详情请点击官网 安装过程就不再赘述,请自己百度 百度的解释为: Wireshark（前称Ethereal）是一个网络封包分析软件。网络封包分析软件的功能是撷取网络封包，并尽可能显示出最为详细的网络封包资料。Wireshark使用WinPC</description>
    </item>
    
    <item>
      <title>git clone出错</title>
      <link>https://CorPython.github.io/post/gitcloneerror/</link>
      <pubDate>Thu, 14 Nov 2019 20:39:01 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/gitcloneerror/</guid>
      <description>问题如下图: 输入命令,修改https方式下载改为使用ssh下载方式 git config --global url.git：//github.com/.insteadOf https://github.com/</description>
    </item>
    
    <item>
      <title>解决vscode终端中文乱码</title>
      <link>https://CorPython.github.io/post/vscode%E7%BB%88%E7%AB%AF%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</link>
      <pubDate>Mon, 11 Nov 2019 20:40:54 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/vscode%E7%BB%88%E7%AB%AF%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</guid>
      <description>解决vscode终端中文乱码 1.查看cmd窗口编码，GBK的编码为936，cmd的默认编码为GBK,而很多编译器的默认编码为UTF-8，所以中文会出现乱码，比如vscode下默认编码为UTF-8 使用chcp查看cmd的编码，如果不是UTF-8，可以使用chcp 65001这个命令 2</description>
    </item>
    
    <item>
      <title>解决git远程和本地分支不同步</title>
      <link>https://CorPython.github.io/post/%E4%BF%AE%E5%A4%8Dgitpush%E5%88%B0github%E5%87%BA%E9%94%99%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 11 Nov 2019 18:46:33 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/%E4%BF%AE%E5%A4%8Dgitpush%E5%88%B0github%E5%87%BA%E9%94%99%E9%97%AE%E9%A2%98/</guid>
      <description>error: failed to push some refs to &amp;lsquo;git@github.com:xxx. git&amp;rsquo; 当执行了git push -u origin master时,有时候会出现下图中的错误,主要时本地的代码和远程代码仓库的代码出现了冲突,需要同步远程的master 分支 要解决上述的冲突很简单,只需要下面两条指令即可完成 git pull origin master git push -u origin master</description>
    </item>
    
    <item>
      <title>Gittalk报错Error: Validation Failed</title>
      <link>https://CorPython.github.io/post/gittalk%E5%87%BA%E9%94%99%E8%A7%A3%E5%86%B3/</link>
      <pubDate>Mon, 11 Nov 2019 18:14:21 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/gittalk%E5%87%BA%E9%94%99%E8%A7%A3%E5%86%B3/</guid>
      <description>gittalk 是一个基于 Github Issue 和 Preact 开发的评论插件。它除了支持 Hexo 外，还支持 java，php 等语言开发的博客,当然我现在使用的hugo博客也是支持的.详情请点击gittalk官网 但是如果标题的字节过长(建议标题起短一些),会出现ERROR:Validation Failed这个错误 解决方案 1.找到配</description>
    </item>
    
    <item>
      <title>Windows大量软件安装后乱码解决</title>
      <link>https://CorPython.github.io/post/windows%E5%A4%A7%E9%87%8F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%90%8E%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3/</link>
      <pubDate>Fri, 08 Nov 2019 20:46:48 +0800</pubDate>
      
      <guid>https://CorPython.github.io/post/windows%E5%A4%A7%E9%87%8F%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%90%8E%E4%B9%B1%E7%A0%81%E8%A7%A3%E5%86%B3/</guid>
      <description>写在前面 你是不是经常遇到windows软件安装后输入窗口输入中文全是乱码或者中文根本不能输入,本人也曾经遇到过这种问题,曾经使用的Dev C++5.11就出现过这种情况,虽然环境改成了中文却全是乱码,搜遍全网,也没有找到结果,就在不久前,我终于知道了问题的解决办法,请根据下列步骤进</description>
    </item>
    
  </channel>
</rss>